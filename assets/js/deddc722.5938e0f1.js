"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4824],{1410:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>r});const o=JSON.parse('{"id":"jetson-nano/opencv-cpp","title":"OpenCV C++ installation","description":"In this case, I use Original Jetson Nano 4GB, OS debian 18.x.","source":"@site/docs/jetson-nano/opencv-cpp.md","sourceDirName":"jetson-nano","slug":"/jetson-nano/opencv-cpp","permalink":"/docusaurus/docs/jetson-nano/opencv-cpp","draft":false,"unlisted":false,"editUrl":"https://github.com/Izfaha/docusaurus/tree/main/docs/jetson-nano/opencv-cpp.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_title":"OpenCV C++ Installation","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Run CMake","permalink":"/docusaurus/docs/jetson-nano/run-cmake"},"next":{"title":"Selamat Datang di Dokumen Pengantar","permalink":"/docusaurus/docs/intro/"}}');var t=i(4848),c=i(8453);const s={sidebar_title:"OpenCV C++ Installation",sidebar_position:3},l="OpenCV C++ installation",a={},r=[{value:"Build Core Modulex",id:"build-core-modulex",level:2},{value:"Build with opencv_contrib",id:"build-with-opencv_contrib",level:2},{value:"Verify the installation",id:"verify-the-installation",level:2}];function d(n){const e={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"opencv-c-installation",children:"OpenCV C++ installation"})}),"\n",(0,t.jsx)(e.admonition,{title:"Disclaimer",type:"info",children:(0,t.jsx)(e.p,{children:"In this case, I use Original Jetson Nano 4GB, OS debian 18.x."})}),"\n",(0,t.jsx)(e.h2,{id:"build-core-modulex",children:"Build Core Modulex"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sh",children:"# Install minimal prerequisites (Ubuntu 18.04 as reference)\nsudo apt update && sudo apt install -y cmake g++ wget unzip\n \n# Download and unpack sources\nwget -O opencv.zip https://github.com/opencv/opencv/archive/4.x.zip\nunzip opencv.zip\n \n# Create build directory\nmkdir -p build && cd build\n \n# Configure\ncmake  ../opencv-4.x\n \n# Build\ncmake --build .\n"})}),"\n",(0,t.jsx)(e.h2,{id:"build-with-opencv_contrib",children:"Build with opencv_contrib"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sh",children:"# Install minimal prerequisites (Ubuntu 18.04 as reference)\nsudo apt update && sudo apt install -y cmake g++ wget unzip\n \n# Download and unpack sources\nwget -O opencv.zip https://github.com/opencv/opencv/archive/4.x.zip\nwget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/4.x.zip\nunzip opencv.zip\nunzip opencv_contrib.zip\n \n# Create build directory and switch into it\nmkdir -p build && cd build\n \n# Configure\ncmake -DOPENCV_EXTRA_MODULES_PATH=../opencv_contrib-4.x/modules ../opencv-4.x\n \n# Build\ncmake --build .\n"})}),"\n",(0,t.jsx)(e.h2,{id:"verify-the-installation",children:"Verify the installation"}),"\n",(0,t.jsxs)(e.p,{children:["By default OpenCV will be install to the ",(0,t.jsx)(e.code,{children:"/usr/local"})," directory. You can check using ",(0,t.jsx)(e.code,{children:"ls"})," command."]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"/usr/local/bin"})," executable files"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"/usr/local/lib"})," libraries (.so)"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"/usr/local/cmake/opencv4"})," cmake package"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"/usr/local/include/opencv4"})," headers"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"/usr/local/share/opencv4"})," other files"]}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>s,x:()=>l});var o=i(6540);const t={},c=o.createContext(t);function s(n){const e=o.useContext(c);return o.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:s(n.components),o.createElement(c.Provider,{value:e},n.children)}}}]);