"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6326],{3712:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"sso-captive-portal/set-freeradius-server","title":"Setting Freeradius Server","description":"Netplan Configuration","source":"@site/docs/sso-captive-portal/set-freeradius-server.md","sourceDirName":"sso-captive-portal","slug":"/sso-captive-portal/set-freeradius-server","permalink":"/docusaurus/docs/sso-captive-portal/set-freeradius-server","draft":false,"unlisted":false,"editUrl":"https://github.com/Izfaha/docusaurus/tree/main/docs/sso-captive-portal/set-freeradius-server.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_label":"Freeradius Server Configuration","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Mikrotik Configuration","permalink":"/docusaurus/docs/sso-captive-portal/set-mikrotik"},"next":{"title":"Client Configuration","permalink":"/docusaurus/docs/sso-captive-portal/set-client"}}');var a=s(4848),t=s(8453);const i={sidebar_label:"Freeradius Server Configuration",sidebar_position:3},l="Setting Freeradius Server",d={},o=[{value:"Netplan Configuration",id:"netplan-configuration",level:2},{value:"What are those configuration?",id:"what-are-those-configuration",level:3},{value:"Setting PostgreSQL",id:"setting-postgresql",level:2},{value:"Login to PostgreSQL",id:"login-to-postgresql",level:3},{value:"Create User and Database",id:"create-user-and-database",level:3},{value:"Create Table Using Radius Template",id:"create-table-using-radius-template",level:3},{value:"Activate SQL (PostgreSQL) Modul",id:"activate-sql-postgresql-modul",level:3},{value:"Add user to database",id:"add-user-to-database",level:3},{value:"Setting Freeradius",id:"setting-freeradius",level:2}];function c(e){const n={admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"setting-freeradius-server",children:"Setting Freeradius Server"})}),"\n",(0,a.jsx)(n.h2,{id:"netplan-configuration",children:"Netplan Configuration"}),"\n",(0,a.jsx)(n.p,{children:"We have to configure netplan first."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"sudo vim /etc/netplan/50-cloud-init.yaml\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",metastring:"title='/etc/netplan/50-cloud-init.yaml'",children:"network:\n  ethernets:\n    ens3:\n      dhcp4: true\n    ens4: \n      addresses:\n      - 192.168.1.2/24\n      routes:\n        - to: default\n          via: 192.168.1.1\n  version: 2\n"})}),"\n",(0,a.jsxs)(n.admonition,{title:"Important",type:"note",children:[(0,a.jsxs)(n.p,{children:["If after rebooting your system the netplan's configuration change or reset by default configure in ",(0,a.jsx)(n.code,{children:"/etc/cloud/cloud.cfg.d/99-disable-network-config.cfg"}),".",(0,a.jsx)(n.br,{}),"\n","Add this following code."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"network: {config: disabled}\n"})}),(0,a.jsxs)(n.p,{children:["If there is no ",(0,a.jsx)(n.code,{children:"99-disable-network-config.cfg"})," file, just create it by yourself."]})]}),"\n",(0,a.jsx)(n.h3,{id:"what-are-those-configuration",children:"What are those configuration?"}),"\n",(0,a.jsx)(n.admonition,{title:"Info",type:"note",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"192.168.1.2"})," IP for freeradius.\n",(0,a.jsx)(n.code,{children:"192.168.1.1"})," IP's CHR (MikroTik)."]})}),"\n",(0,a.jsx)(n.h2,{id:"setting-postgresql",children:"Setting PostgreSQL"}),"\n",(0,a.jsx)(n.h3,{id:"login-to-postgresql",children:"Login to PostgreSQL"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"sudo -i -u postgres\npsql\n"})}),"\n",(0,a.jsx)(n.h3,{id:"create-user-and-database",children:"Create User and Database"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Create user and database for FreeRADIUS"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"CREATE USER radius WITH PASSWORD 'freeradius';\nCREATE DATABASE radiusdb WITH OWNER radius;\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsx)(n.li,{children:"Membuat user untuk client vm."}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"INSERT INTO radcheck (username, attribute, op, value)\nVALUES ('debian-client', 'Cleartext-Password', ':=', 'debian');\n"})}),"\n",(0,a.jsx)(n.p,{children:"Verify whether user for client vm exist."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM radcheck WHERE username = 'debian-client';\n"})}),"\n",(0,a.jsx)(n.h3,{id:"create-table-using-radius-template",children:"Create Table Using Radius Template"}),"\n",(0,a.jsx)(n.p,{children:"Log out from postgresql."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"cd /etc/freeradius/3.0/mods-config/sql/main/postgresql/\n"})}),"\n",(0,a.jsx)(n.h3,{id:"activate-sql-postgresql-modul",children:"Activate SQL (PostgreSQL) Modul"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"cd /etc/freeradius/3.0/mods-enabled\nln -s ../mods-available/sql sql\n"})}),"\n",(0,a.jsx)(n.p,{children:"Edit file module."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"sudo vim /etc/freeradius/3.0/mods-available/sql\n"})}),"\n",(0,a.jsx)(n.p,{children:"Find and uncomment this code:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'# === ubah bagian connection\ndialect = "postgresql"\ndriver = "rlm_sql_postgresql"\nserver = "localhost"\nport = 5432\nlogin = "radius"\npassword = "freeradius"\nradius_db = "radiusdb"\nread_clients = yes\n'})}),"\n",(0,a.jsx)(n.p,{children:"Then, check the connection:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"sudo freeradius -X\n"})}),"\n",(0,a.jsx)(n.p,{children:"Output will be:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'rlm_sql (sql): Attempting to connect to database "radiusdb"\nConnected to database successfully\n'})}),"\n",(0,a.jsx)(n.h3,{id:"add-user-to-database",children:"Add user to database"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"INSERT INTO radcheck (username, attribute, op, value) VALUES ('debian-client', 'Cleartext-Password', ':=', 'debian');\n"})}),"\n",(0,a.jsx)(n.h2,{id:"setting-freeradius",children:"Setting Freeradius"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Add Ip client to server (Freeradius)."}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"sudo nano /etc/freeradius/3.0/clients.conf\n"})}),"\n",(0,a.jsx)(n.p,{children:"Add this user:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>l});var r=s(6540);const a={},t=r.createContext(a);function i(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);