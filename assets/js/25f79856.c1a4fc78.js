"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6143],{964:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"laravel-project/profilecontroller","title":"ProfileController.php","description":"Sebagai Profile User Manager","source":"@site/docs/laravel-project/profilecontroller.md","sourceDirName":"laravel-project","slug":"/laravel-project/profilecontroller","permalink":"/docusaurus/docs/laravel-project/profilecontroller","draft":false,"unlisted":false,"editUrl":"https://github.com/Izfaha/docusaurus/tree/main/docs/laravel-project/profilecontroller.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_title":"ProfileController.php","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Ajax Live Search untuk kos","permalink":"/docusaurus/docs/laravel-project/ajax-live-search"},"next":{"title":"Tutorial - Basics","permalink":"/docusaurus/docs/category/tutorial---basics"}}');var s=n(4848),o=n(8453);const i={sidebar_title:"ProfileController.php",sidebar_position:4},l="ProfileController.php",a={},u=[];function p(e){const r={code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"profilecontrollerphp",children:"ProfileController.php"})}),"\n",(0,s.jsx)(r.p,{children:"Sebagai Profile User Manager"}),"\n",(0,s.jsx)(r.p,{children:"Mengatur semua yang berkaitan dengan user"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsx)(r.li,{children:"Menampilkan form profil user (nama, email, dsb.)"}),"\n",(0,s.jsx)(r.li,{children:"Memperbarui informasi user"}),"\n",(0,s.jsx)(r.li,{children:"Menghapus akun user"}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",metastring:"title:'app/Http/Controllers/ProfileController.php'",children:"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Http\\Requests\\ProfileUpdateRequest;\nuse Illuminate\\Http\\RedirectResponse;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Auth;\nuse Illuminate\\Support\\Facades\\Redirect;\nuse Illuminate\\View\\View;\n\nclass ProfileController extends Controller\n{\n    /**\n     * Display the user's profile form.\n     */\n    public function edit(Request $request): View\n    {\n        return view('profile.edit', [\n            'user' => $request->user(),\n        ]);\n    }\n\n    /**\n     * Update the user's profile information.\n     */\n    public function update(ProfileUpdateRequest $request): RedirectResponse\n    {\n        $request->user()->fill($request->validated());\n\n        if ($request->user()->isDirty('email')) {\n            $request->user()->email_verified_at = null;\n        }\n\n        $request->user()->save();\n\n        return Redirect::route('profile.edit')->with('status', 'profile-updated');\n    }\n\n    /**\n     * Delete the user's account.\n     */\n    public function destroy(Request $request): RedirectResponse\n    {\n        $request->validateWithBag('userDeletion', [\n            'password' => ['required', 'current_password'],\n        ]);\n\n        $user = $request->user();\n\n        Auth::logout();\n\n        $user->delete();\n\n        $request->session()->invalidate();\n        $request->session()->regenerateToken();\n\n        return Redirect::to('/');\n    }\n}\n"})})]})}function c(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>l});var t=n(6540);const s={},o=t.createContext(s);function i(e){const r=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);