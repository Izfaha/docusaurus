"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7594],{4151:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"sso-captive-portal/set-mikrotik","title":"CHR configuration (Router OS)","description":"Create Network Configurasion For VMs","source":"@site/docs/sso-captive-portal/set-mikrotik.md","sourceDirName":"sso-captive-portal","slug":"/sso-captive-portal/set-mikrotik","permalink":"/docusaurus/docs/sso-captive-portal/set-mikrotik","draft":false,"unlisted":false,"editUrl":"https://github.com/Izfaha/docusaurus/tree/main/docs/sso-captive-portal/set-mikrotik.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_label":"Mikrotik Configuration","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Pre-Requests","permalink":"/docusaurus/docs/sso-captive-portal/pre-requests"},"next":{"title":"Freeradius Server Configuration","permalink":"/docusaurus/docs/sso-captive-portal/set-freeradius-server"}}');var o=n(4848),s=n(8453);const r={sidebar_label:"Mikrotik Configuration",sidebar_position:2},a="CHR configuration (Router OS)",c={},l=[{value:"Create Network Configurasion For VMs",id:"create-network-configurasion-for-vms",level:2},{value:"CHR Configuration Using MikroTik",id:"chr-configuration-using-mikrotik",level:2},{value:"Set IP Interface",id:"set-ip-interface",level:3},{value:"Set hotspot",id:"set-hotspot",level:3}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"chr-configuration-router-os",children:"CHR configuration (Router OS)"})}),"\n",(0,o.jsx)(t.h2,{id:"create-network-configurasion-for-vms",children:"Create Network Configurasion For VMs"}),"\n",(0,o.jsxs)(t.p,{children:["This bash script will create a switch name ",(0,o.jsx)(t.code,{children:"br0-lan"})," type bridge and taps name 'tap 0, tap 1, tap 2'."]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"tap 0"})," for CHR."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"tap 1"})," for freeradius server."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"tap 2"})," for client (Debian)."]}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-sh",children:'#!/bin/bash\n# run using root\nif [ "EUID" -ne 0 ]; then\n    echo "You need to be root user to run this script!"\n    exit 1\nfi\n\necho "Starting to configure network for VM..."\n\necho "Add bridge, name \\"br0-lan\\""\n# create switch "br0-lan" using bridge\nsudo ip link add br0-lan type bridge\n\necho "add tap devices (tap0, tap1, tap2)"\n# create tap "Lubang switch" \nsudo ip tuntap add tap0 mode tap\nsudo ip tuntap add tap1 mode tap\nsudo ip tuntap add tap2 mode tap\n\necho "Connecting tap0, tap1, tap2 to br0-lan..."\nsudo ip link set tap0 master br0-lan\nsudo ip link set tap1 master br0-lan\nsudo ip link set tap2 master br0-lan\n\necho "Activate interface \\"br0-lan\\" dan \\"tap\\" devices..." \n# to link up all of these \nsudo ip link set br0-lan up\nsudo ip link set tap0 up\nsudo ip link set tap1 up\nsudo ip link set tap2 up\n\necho "Done to configure network."\n\n# checking and net-tools installation\n\necho "Checking net-tools installation..."\n\n# check if ifconfig exists\nif ! command -v ifconfig &> /dev/null\nthen\n    echo "\\"ifconfig\\" is not found, trying to install it..."\n\n    # distribution detection and install net-tools\n    if [ -f /etc/debian_version ]; then\n        # Debian/Ubuntu\n        echo "Debian distribution detected, starting to install net-tools..."\n        sudo apt update\n        sudo apt install net-tools -y\n    elif [ -f /etc/redhat-release ]; then\n        echo "Red Hat/CentOS/Fedora distribution detected, starting to install net-tools..."\n        sudo yum install -y net-tools || sudo dnf install -y net-tools\n    elif [ -f /etc/arch-release ]; then\n        echo "Arch distribution detected, starting to install net-tools..."\n        sudo pacman -Sy --noconfirm net-tools \n    else\n        echo "Uknwon linux distribution."\n        echo "Please, install \\\'net-tools\\\' manually."\n    fi\nelse \n    echo "\\\'ifconfig\\\' has installed in your system!"\nfi \n\necho "Display all interfaces..."\nifconfig || ip a\n\n'})}),"\n",(0,o.jsx)(t.h2,{id:"chr-configuration-using-mikrotik",children:"CHR Configuration Using MikroTik"}),"\n",(0,o.jsx)(t.h3,{id:"set-ip-interface",children:"Set IP Interface"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"IP list",src:n(9870).A+"",width:"367",height:"84"})}),"\n",(0,o.jsx)(t.h3,{id:"set-hotspot",children:"Set hotspot"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-mikrotik",children:"/ip hotspot add interface=ether2 address-pool=hs-pool1 profile=hsprof1 name=hotspot1\n/ip hotspot user profile set hsprof1 use-radius=yes\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(6540);const o={},s=i.createContext(o);function r(e){const t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:t},e.children)}},9870:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/addres-list-a5288575d8bc740a5a97adc79282045c.png"}}]);